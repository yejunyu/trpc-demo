// tsconfig.json
{
  "compilerOptions": {
    /* --- 基本选项 (Basic Options) --- */
    "target": "ES2022", // 编译后的 JavaScript 版本。ES2022 兼容最新的 Node.js LTS 版本。
    "module": "NodeNext", // 使用 Node.js 最新的模块系统。
    "lib": ["ES2022"], // 包含的默认类型定义库。

    /* --- 模块解析 (Module Resolution) --- */
    "moduleResolution": "NodeNext", // 模块解析策略，与 module: "NodeNext" 配套使用。
    "baseUrl": ".", // 解析非相对模块导入的基准目录。
    "paths": {
      // 路径别名，让导入更优雅
      "@/*": ["src/*"]
    },

    /* --- 严格性检查 (Strictness) --- */
    "strict": true, // 启用所有严格类型检查选项，这是 TypeScript 的精髓！
    "noUnusedLocals": true, // 报告未使用的局部变量。
    "noUnusedParameters": true, // 报告未使用的参数。
    "noImplicitReturns": true, // 确保函数所有路径都有返回值。

    /* --- 代码质量与一致性 --- */
    "forceConsistentCasingInFileNames": true, // 强制文件名大小写一致。
    "esModuleInterop": true, // 解决 CommonJS 和 ES Modules 之间的兼容性问题。
    "skipLibCheck": true, // 跳过对所有声明文件 (*.d.ts) 的类型检查，加快编译速度。

    /* --- 输出选项 (Emit Options) --- */
    "outDir": "./dist", // 编译后文件的输出目录。
    "rootDir": "./src", // 指定 TypeScript 源文件的根目录。
    "sourceMap": true // 生成 .map 文件，方便调试。
  },
  "include": ["src/**/*.ts"], // 指定需要编译的文件匹配模式。
  "exclude": ["node_modules", "dist"] // 指定不需要编译的目录。
}
